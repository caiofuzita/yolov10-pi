task: detect
mode: train
model: "YOLO(\n  (model): DetectionModel(\n    (model): Sequential(\n      (0): Conv(\n\
  \        (conv): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1),\
  \ bias=False)\n        (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n        (act): SiLU(inplace=True)\n      )\n      (1):\
  \ Conv(\n        (conv): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1,\
  \ 1), bias=False)\n        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n        (act): SiLU(inplace=True)\n      )\n      (2):\
  \ C2f(\n        (cv1): Conv(\n          (conv): Conv2d(32, 32, kernel_size=(1, 1),\
  \ stride=(1, 1), bias=False)\n          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n          (act): SiLU(inplace=True)\n\
  \        )\n        (cv2): Conv(\n          (conv): Conv2d(48, 32, kernel_size=(1,\
  \ 1), stride=(1, 1), bias=False)\n          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n          (act): SiLU(inplace=True)\n\
  \        )\n        (m): ModuleList(\n          (0): Bottleneck(\n            (cv1):\
  \ Conv(\n              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1),\
  \ padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (cv2): Conv(\n              (conv): Conv2d(16, 16, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(16,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \   (act): SiLU(inplace=True)\n            )\n          )\n        )\n      )\n\
  \      (3): Conv(\n        (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2,\
  \ 2), padding=(1, 1), bias=False)\n        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n        (act): SiLU(inplace=True)\n  \
  \    )\n      (4): C2f(\n        (cv1): Conv(\n          (conv): Conv2d(64, 64,\
  \ kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn): BatchNorm2d(64,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n          (act):\
  \ SiLU(inplace=True)\n        )\n        (cv2): Conv(\n          (conv): Conv2d(128,\
  \ 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn): BatchNorm2d(64,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n          (act):\
  \ SiLU(inplace=True)\n        )\n        (m): ModuleList(\n          (0-1): 2 x\
  \ Bottleneck(\n            (cv1): Conv(\n              (conv): Conv2d(32, 32, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(32,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \   (act): SiLU(inplace=True)\n            )\n            (cv2): Conv(\n       \
  \       (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1),\
  \ bias=False)\n              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n              (act): SiLU(inplace=True)\n         \
  \   )\n          )\n        )\n      )\n      (5): SCDown(\n        (cv1): Conv(\n\
  \          (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
  \          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (cv2): Conv(\n        \
  \  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128,\
  \ bias=False)\n          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n          (act): Identity()\n        )\n      )\n \
  \     (6): C2f(\n        (cv1): Conv(\n          (conv): Conv2d(128, 128, kernel_size=(1,\
  \ 1), stride=(1, 1), bias=False)\n          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n          (act): SiLU(inplace=True)\n\
  \        )\n        (cv2): Conv(\n          (conv): Conv2d(256, 128, kernel_size=(1,\
  \ 1), stride=(1, 1), bias=False)\n          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n          (act): SiLU(inplace=True)\n\
  \        )\n        (m): ModuleList(\n          (0-1): 2 x Bottleneck(\n       \
  \     (cv1): Conv(\n              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
  \ 1), padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001,\
  \ momentum=0.03, affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (cv2): Conv(\n              (conv): Conv2d(64, 64, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(64,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \   (act): SiLU(inplace=True)\n            )\n          )\n        )\n      )\n\
  \      (7): SCDown(\n        (cv1): Conv(\n          (conv): Conv2d(128, 256, kernel_size=(1,\
  \ 1), stride=(1, 1), bias=False)\n          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n          (act): SiLU(inplace=True)\n\
  \        )\n        (cv2): Conv(\n          (conv): Conv2d(256, 256, kernel_size=(3,\
  \ 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)\n          (bn): BatchNorm2d(256,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n          (act):\
  \ Identity()\n        )\n      )\n      (8): C2f(\n        (cv1): Conv(\n      \
  \    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n \
  \         (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (cv2): Conv(\n        \
  \  (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n   \
  \       (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (m): ModuleList(\n    \
  \      (0): Bottleneck(\n            (cv1): Conv(\n              (conv): Conv2d(128,\
  \ 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        \
  \      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \              (act): SiLU(inplace=True)\n            )\n            (cv2): Conv(\n\
  \              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), bias=False)\n              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n          )\n        )\n      )\n      (9): SPPF(\n        (cv1):\
  \ Conv(\n          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
  \          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (cv2): Conv(\n        \
  \  (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n   \
  \       (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (m): MaxPool2d(kernel_size=5,\
  \ stride=1, padding=2, dilation=1, ceil_mode=False)\n      )\n      (10): PSA(\n\
  \        (cv1): Conv(\n          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n          (act): SiLU(inplace=True)\n        )\n  \
  \      (cv2): Conv(\n          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n          (act): SiLU(inplace=True)\n        )\n  \
  \      (attn): Attention(\n          (qkv): Conv(\n            (conv): Conv2d(128,\
  \ 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn): BatchNorm2d(256,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \ (act): Identity()\n          )\n          (proj): Conv(\n            (conv): Conv2d(128,\
  \ 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn): BatchNorm2d(128,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \ (act): Identity()\n          )\n          (pe): Conv(\n            (conv): Conv2d(128,\
  \ 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)\n\
  \            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \            (act): Identity()\n          )\n        )\n        (ffn): Sequential(\n\
  \          (0): Conv(\n            (conv): Conv2d(128, 256, kernel_size=(1, 1),\
  \ stride=(1, 1), bias=False)\n            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n            (act): SiLU(inplace=True)\n\
  \          )\n          (1): Conv(\n            (conv): Conv2d(256, 128, kernel_size=(1,\
  \ 1), stride=(1, 1), bias=False)\n            (bn): BatchNorm2d(128, eps=0.001,\
  \ momentum=0.03, affine=True, track_running_stats=True)\n            (act): Identity()\n\
  \          )\n        )\n      )\n      (11): Upsample(scale_factor=2.0, mode='nearest')\n\
  \      (12): Concat()\n      (13): C2f(\n        (cv1): Conv(\n          (conv):\
  \ Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn):\
  \ BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (cv2): Conv(\n        \
  \  (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n   \
  \       (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (m): ModuleList(\n    \
  \      (0): Bottleneck(\n            (cv1): Conv(\n              (conv): Conv2d(64,\
  \ 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n         \
  \     (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \              (act): SiLU(inplace=True)\n            )\n            (cv2): Conv(\n\
  \              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n          )\n        )\n      )\n      (14): Upsample(scale_factor=2.0,\
  \ mode='nearest')\n      (15): Concat()\n      (16): C2f(\n        (cv1): Conv(\n\
  \          (conv): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
  \          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (cv2): Conv(\n        \
  \  (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n     \
  \     (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \          (act): SiLU(inplace=True)\n        )\n        (m): ModuleList(\n    \
  \      (0): Bottleneck(\n            (cv1): Conv(\n              (conv): Conv2d(32,\
  \ 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n         \
  \     (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \              (act): SiLU(inplace=True)\n            )\n            (cv2): Conv(\n\
  \              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), bias=False)\n              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n          )\n        )\n      )\n      (17): Conv(\n        (conv):\
  \ Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n\
  \        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \        (act): SiLU(inplace=True)\n      )\n      (18): Concat()\n      (19): C2f(\n\
  \        (cv1): Conv(\n          (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n          (act): SiLU(inplace=True)\n        )\n  \
  \      (cv2): Conv(\n          (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n          (act): SiLU(inplace=True)\n        )\n  \
  \      (m): ModuleList(\n          (0): Bottleneck(\n            (cv1): Conv(\n\
  \              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (cv2): Conv(\n              (conv): Conv2d(64, 64, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(64,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \   (act): SiLU(inplace=True)\n            )\n          )\n        )\n      )\n\
  \      (20): SCDown(\n        (cv1): Conv(\n          (conv): Conv2d(128, 128, kernel_size=(1,\
  \ 1), stride=(1, 1), bias=False)\n          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n          (act): SiLU(inplace=True)\n\
  \        )\n        (cv2): Conv(\n          (conv): Conv2d(128, 128, kernel_size=(3,\
  \ 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)\n          (bn): BatchNorm2d(128,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n          (act):\
  \ Identity()\n        )\n      )\n      (21): Concat()\n      (22): C2fCIB(\n  \
  \      (cv1): Conv(\n          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n          (act): SiLU(inplace=True)\n        )\n  \
  \      (cv2): Conv(\n          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n          (act): SiLU(inplace=True)\n        )\n  \
  \      (m): ModuleList(\n          (0): CIB(\n            (cv1): Sequential(\n \
  \             (0): Conv(\n                (conv): Conv2d(128, 128, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)\n                (bn):\
  \ BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n              (1):\
  \ Conv(\n                (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n                (act): SiLU(inplace=True)\n\
  \              )\n              (2): RepVGGDW(\n                (conv): Conv(\n\
  \                  (conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3,\
  \ 3), groups=256, bias=False)\n                  (bn): BatchNorm2d(256, eps=0.001,\
  \ momentum=0.03, affine=True, track_running_stats=True)\n                  (act):\
  \ Identity()\n                )\n                (conv1): Conv(\n              \
  \    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1),\
  \ groups=256, bias=False)\n                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n                  (act): Identity()\n\
  \                )\n                (act): SiLU(inplace=True)\n              )\n\
  \              (3): Conv(\n                (conv): Conv2d(256, 128, kernel_size=(1,\
  \ 1), stride=(1, 1), bias=False)\n                (bn): BatchNorm2d(128, eps=0.001,\
  \ momentum=0.03, affine=True, track_running_stats=True)\n                (act):\
  \ SiLU(inplace=True)\n              )\n              (4): Conv(\n              \
  \  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128,\
  \ bias=False)\n                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n                (act): SiLU(inplace=True)\n\
  \              )\n            )\n          )\n        )\n      )\n      (23): v10Detect(\n\
  \        (cv2): ModuleList(\n          (0): Sequential(\n            (0): Conv(\n\
  \              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (1): Conv(\n              (conv): Conv2d(64, 64, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(64,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \   (act): SiLU(inplace=True)\n            )\n            (2): Conv2d(64, 64, kernel_size=(1,\
  \ 1), stride=(1, 1))\n          )\n          (1): Sequential(\n            (0):\
  \ Conv(\n              (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1),\
  \ padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (1): Conv(\n              (conv): Conv2d(64, 64, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(64,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \   (act): SiLU(inplace=True)\n            )\n            (2): Conv2d(64, 64, kernel_size=(1,\
  \ 1), stride=(1, 1))\n          )\n          (2): Sequential(\n            (0):\
  \ Conv(\n              (conv): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1),\
  \ padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (1): Conv(\n              (conv): Conv2d(64, 64, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n              (bn): BatchNorm2d(64,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \   (act): SiLU(inplace=True)\n            )\n            (2): Conv2d(64, 64, kernel_size=(1,\
  \ 1), stride=(1, 1))\n          )\n        )\n        (cv3): ModuleList(\n     \
  \     (0): Sequential(\n            (0): Sequential(\n              (0): Conv(\n\
  \                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), groups=64, bias=False)\n                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n                (act): SiLU(inplace=True)\n\
  \              )\n              (1): Conv(\n                (conv): Conv2d(64, 80,\
  \ kernel_size=(1, 1), stride=(1, 1), bias=False)\n                (bn): BatchNorm2d(80,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \     (act): SiLU(inplace=True)\n              )\n            )\n            (1):\
  \ Sequential(\n              (0): Conv(\n                (conv): Conv2d(80, 80,\
  \ kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)\n  \
  \              (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n              (1):\
  \ Conv(\n                (conv): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1),\
  \ bias=False)\n                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n                (act): SiLU(inplace=True)\n       \
  \       )\n            )\n            (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1,\
  \ 1))\n          )\n          (1): Sequential(\n            (0): Sequential(\n \
  \             (0): Conv(\n                (conv): Conv2d(128, 128, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)\n                (bn):\
  \ BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n              (1):\
  \ Conv(\n                (conv): Conv2d(128, 80, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n                (act): SiLU(inplace=True)\n\
  \              )\n            )\n            (1): Sequential(\n              (0):\
  \ Conv(\n                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1),\
  \ padding=(1, 1), groups=80, bias=False)\n                (bn): BatchNorm2d(80,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \     (act): SiLU(inplace=True)\n              )\n              (1): Conv(\n   \
  \             (conv): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
  \                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n            )\n   \
  \         (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1))\n          )\n\
  \          (2): Sequential(\n            (0): Sequential(\n              (0): Conv(\n\
  \                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), groups=256, bias=False)\n                (bn): BatchNorm2d(256, eps=0.001,\
  \ momentum=0.03, affine=True, track_running_stats=True)\n                (act):\
  \ SiLU(inplace=True)\n              )\n              (1): Conv(\n              \
  \  (conv): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    \
  \            (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n            )\n   \
  \         (1): Sequential(\n              (0): Conv(\n                (conv): Conv2d(80,\
  \ 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)\n\
  \                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n              (1):\
  \ Conv(\n                (conv): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1),\
  \ bias=False)\n                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n                (act): SiLU(inplace=True)\n       \
  \       )\n            )\n            (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1,\
  \ 1))\n          )\n        )\n        (dfl): DFL(\n          (conv): Conv2d(16,\
  \ 1, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        )\n        (one2one_cv2):\
  \ ModuleList(\n          (0): Sequential(\n            (0): Conv(\n            \
  \  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
  \              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \              (act): SiLU(inplace=True)\n            )\n            (1): Conv(\n\
  \              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))\n\
  \          )\n          (1): Sequential(\n            (0): Conv(\n             \
  \ (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
  \              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \              (act): SiLU(inplace=True)\n            )\n            (1): Conv(\n\
  \              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))\n\
  \          )\n          (2): Sequential(\n            (0): Conv(\n             \
  \ (conv): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
  \              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \              (act): SiLU(inplace=True)\n            )\n            (1): Conv(\n\
  \              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), bias=False)\n              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n              (act): SiLU(inplace=True)\n\
  \            )\n            (2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))\n\
  \          )\n        )\n        (one2one_cv3): ModuleList(\n          (0): Sequential(\n\
  \            (0): Sequential(\n              (0): Conv(\n                (conv):\
  \ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)\n\
  \                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n              (1):\
  \ Conv(\n                (conv): Conv2d(64, 80, kernel_size=(1, 1), stride=(1, 1),\
  \ bias=False)\n                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n                (act): SiLU(inplace=True)\n       \
  \       )\n            )\n            (1): Sequential(\n              (0): Conv(\n\
  \                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), groups=80, bias=False)\n                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n                (act): SiLU(inplace=True)\n\
  \              )\n              (1): Conv(\n                (conv): Conv2d(80, 80,\
  \ kernel_size=(1, 1), stride=(1, 1), bias=False)\n                (bn): BatchNorm2d(80,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \     (act): SiLU(inplace=True)\n              )\n            )\n            (2):\
  \ Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1))\n          )\n          (1):\
  \ Sequential(\n            (0): Sequential(\n              (0): Conv(\n        \
  \        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
  \ 1), groups=128, bias=False)\n                (bn): BatchNorm2d(128, eps=0.001,\
  \ momentum=0.03, affine=True, track_running_stats=True)\n                (act):\
  \ SiLU(inplace=True)\n              )\n              (1): Conv(\n              \
  \  (conv): Conv2d(128, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    \
  \            (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n            )\n   \
  \         (1): Sequential(\n              (0): Conv(\n                (conv): Conv2d(80,\
  \ 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)\n\
  \                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n              (1):\
  \ Conv(\n                (conv): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1),\
  \ bias=False)\n                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True,\
  \ track_running_stats=True)\n                (act): SiLU(inplace=True)\n       \
  \       )\n            )\n            (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1,\
  \ 1))\n          )\n          (2): Sequential(\n            (0): Sequential(\n \
  \             (0): Conv(\n                (conv): Conv2d(256, 256, kernel_size=(3,\
  \ 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)\n                (bn):\
  \ BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n              (1):\
  \ Conv(\n                (conv): Conv2d(256, 80, kernel_size=(1, 1), stride=(1,\
  \ 1), bias=False)\n                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03,\
  \ affine=True, track_running_stats=True)\n                (act): SiLU(inplace=True)\n\
  \              )\n            )\n            (1): Sequential(\n              (0):\
  \ Conv(\n                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1),\
  \ padding=(1, 1), groups=80, bias=False)\n                (bn): BatchNorm2d(80,\
  \ eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n           \
  \     (act): SiLU(inplace=True)\n              )\n              (1): Conv(\n   \
  \             (conv): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
  \                (bn): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)\n\
  \                (act): SiLU(inplace=True)\n              )\n            )\n   \
  \         (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1))\n          )\n\
  \        )\n      )\n    )\n  )\n)"
data: ./data.yaml
epochs: 100
time: null
patience: 100
batch: 16
imgsz: 640
save: true
save_period: -1
cache: false
device: null
workers: 8
project: null
name: train16
exist_ok: false
pretrained: true
optimizer: auto
verbose: true
seed: 0
deterministic: true
single_cls: false
rect: false
cos_lr: false
close_mosaic: 10
resume: false
amp: true
fraction: 1.0
profile: false
freeze: null
multi_scale: false
overlap_mask: true
mask_ratio: 4
dropout: 0.0
val: true
split: val
save_json: false
save_hybrid: false
conf: null
iou: 0.7
max_det: 300
half: false
dnn: false
plots: true
source: null
vid_stride: 1
stream_buffer: false
visualize: false
augment: false
agnostic_nms: false
classes: null
retina_masks: false
embed: null
show: false
save_frames: false
save_txt: false
save_conf: false
save_crop: false
show_labels: true
show_conf: true
show_boxes: true
line_width: null
format: torchscript
keras: false
optimize: false
int8: false
dynamic: false
simplify: true
opset: null
workspace: 4
nms: false
lr0: 0.01
lrf: 0.01
momentum: 0.937
weight_decay: 0.0005
warmup_epochs: 3.0
warmup_momentum: 0.8
warmup_bias_lr: 0.1
box: 7.5
cls: 0.5
dfl: 1.5
pose: 12.0
kobj: 1.0
label_smoothing: 0.0
nbs: 64
hsv_h: 0.015
hsv_s: 0.7
hsv_v: 0.4
degrees: 0.0
translate: 0.1
scale: 0.5
shear: 0.0
perspective: 0.0
flipud: 0.0
fliplr: 0.5
bgr: 0.0
mosaic: 1.0
mixup: 0.0
copy_paste: 0.0
copy_paste_mode: flip
auto_augment: randaugment
erasing: 0.4
crop_fraction: 1.0
cfg: null
tracker: botsort.yaml
save_dir: C:\Users\Caio Fuzita\runs\detect\train16
